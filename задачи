6.2 (1) Дан массив. Нужно вывести в консоль количество чётных и нечётных элементов в массиве. Если в массиве есть нулевой элемент, то он учитывается и выводится отдельно. При выполнении задания необходимо учесть, что массив может содержать не только числа, но и, например, знаки, null и так далее.
На этот раз оформите решение в виде функции, постарайтесь дать этой функции корректное название, вызовите функцию, проанализируйте синтаксис.
function getTypeElem() {
    let arr = [2, 3, 4, 0, null];
    let even = 0;
    let odd = 0;
    for (let  i = 0; i < arr.length; i++ ) {
        if ( arr [i] === 0) {
        console.log ("это элемент 0");
      }
        else if ( arr[i] === null) {
        console.log("это элемент null");
      }
      else if (arr[i] % 2 != 0) {
      odd++;
      console.log(`Нечетных элементов в массиве ${odd}`);
      }
      else if (arr[i] % 2 === 0) {
      even++;
      console.log(`Четных элементов в массиве ${even}`);
  } 
     else  {
     console.log("a это не определить");
  }
}
}
getTypeElem();
6.4 (2)  Написать функцию, которая принимает на входе любое число (но не больше 1000), определяет, является ли оно простым, и выводит простое число или нет. Если введено больше 1000, то выводится сообщение, что данные неверны. Обратите внимание на числа 0 и 1.
function primality (num) {
	let isPrime, result;
	isPrime = true;
	if (num > 1 && num <= 1000) {
		for (let i = 2; i < num; i++) {
			if(num % i === 0) {
				isPrime = false;
			}
		}
		result = isPrime ? `Число ${num} - простое` : `Число ${num} - составное`;
	} else if (num > 1000){
		result = 'Данные неверны';
	}
	console.log( result);
}

primality(137);

6.5 (3)
Написать функцию, которая принимает число как аргумент и возвращает функцию, которая также принимает число как аргумент и возвращает сумму этих двух чисел. Выведите в консоль результат.

function function1 (a) {
  return function (b) {
  	return a+b;
  }
};

const sumFunction = function1 (45);

const sum = sumFunction (37);

console.log(sum);

6.7 (4)
Напишите функцию, которая принимает два числа. Каждую секунду необходимо выводить в консоль, начиная от первого и заканчивая вторым. Используйте setInterval.

function listNums (a, b) {
  let number = a;

  let timer = setInterval (function() {
    console.log(number);
    if (number == b) {
      clearInterval(timer);
    }
    number++;
  }, 1000);
}

// использование:
listNums(5, 15);

6.8 (5)
Напишите функцию, которая принимает два натуральных числа x и n и возвращает x в степени n. Иначе говоря, умножает x на себя n раз и возвращает результат.
Используйте Arrow Function синтаксис.
Протестируйте функцию на любых значениях и выведите результат в консоль.
let result;
const toDegree = (x, n) => {
    if (x >= 1 && n >= 1) {
        result = Math.pow(x, n);
    }
  else if (x < 1 && n < 1) {
    alert ("используйте натуральные числа!");
  }
};
toDegree (5, 2);
console.log(result);
